// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VGFeed.WebAPI.Database;

namespace VGFeed.WebAPI.Migrations
{
    [DbContext(typeof(_3123Context))]
    [Migration("20200821222533_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VGFeed.WebAPI.Database.Donacije", b =>
                {
                    b.Property<int>("DonacijaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime");

                    b.Property<double>("Kolicina");

                    b.Property<int?>("KorisnikId");

                    b.Property<string>("Token")
                        .IsRequired();

                    b.HasKey("DonacijaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Donacije");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Drzave", b =>
                {
                    b.Property<int>("DrzavaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzave");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Igre", b =>
                {
                    b.Property<int>("IgraId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzlaska")
                        .HasColumnType("datetime");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Izdavac")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("MetacriticOcjena");

                    b.Property<bool>("Multiplayer");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("OriginalnaCijena");

                    b.Property<int>("PlatformId");

                    b.Property<byte[]>("Slika");

                    b.Property<byte[]>("SlikaThumb");

                    b.Property<double>("TrenutnaCijena");

                    b.Property<int>("ZanrId");

                    b.HasKey("IgraId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("ZanrId");

                    b.ToTable("Igre");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan");

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<int>("DrzavaId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Spol")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("UlogaId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("KorisnikId");

                    b.HasIndex("DrzavaId");

                    b.HasIndex("UlogaId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.KorisnikIgre", b =>
                {
                    b.Property<int>("KorisnikIgreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IgraId");

                    b.Property<bool?>("Igrao");

                    b.Property<int>("KorisnikId");

                    b.Property<int?>("Ocjena");

                    b.Property<bool?>("PosjedujeIgru");

                    b.Property<string>("Recenzija")
                        .HasColumnType("text");

                    b.Property<bool?>("Zainteresiran");

                    b.HasKey("KorisnikIgreId");

                    b.HasIndex("IgraId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KorisnikIgre");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.KorisnikSocials", b =>
                {
                    b.Property<int>("KorisnikSocialsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BattleNetName")
                        .IsUnicode(false);

                    b.Property<string>("BattleNetProfilLink")
                        .IsUnicode(false);

                    b.Property<string>("DiscordName")
                        .IsUnicode(false);

                    b.Property<string>("EpicStoreName")
                        .IsUnicode(false);

                    b.Property<string>("EpicStoreProfilLink")
                        .IsUnicode(false);

                    b.Property<int>("KorisnikId");

                    b.Property<string>("NintendoName")
                        .IsUnicode(false);

                    b.Property<string>("NintendoProfilLink")
                        .IsUnicode(false);

                    b.Property<string>("OriginName")
                        .IsUnicode(false);

                    b.Property<string>("OriginProfilLink")
                        .IsUnicode(false);

                    b.Property<string>("Psnname")
                        .HasColumnName("PSNName")
                        .IsUnicode(false);

                    b.Property<string>("PsnprofilLink")
                        .HasColumnName("PSNProfilLink")
                        .IsUnicode(false);

                    b.Property<string>("SteamName")
                        .IsUnicode(false);

                    b.Property<string>("SteamProfilLink")
                        .IsUnicode(false);

                    b.Property<string>("XboxName")
                        .IsUnicode(false);

                    b.Property<string>("XboxProfilLink")
                        .IsUnicode(false);

                    b.HasKey("KorisnikSocialsId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KorisnikSocials");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Platforme", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Logo");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Skracenica")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("PlatformId");

                    b.ToTable("Platforme");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Poruke", b =>
                {
                    b.Property<int>("PorukaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int>("Posiljalac");

                    b.Property<int>("Primalac");

                    b.Property<bool>("StatusPoruke");

                    b.Property<string>("Tekst")
                        .IsRequired();

                    b.HasKey("PorukaId");

                    b.HasIndex("Posiljalac");

                    b.HasIndex("Primalac");

                    b.ToTable("Poruke");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumEnd")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumStart")
                        .HasColumnType("date");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("SaleLink")
                        .IsUnicode(false);

                    b.Property<int>("StoreId");

                    b.HasKey("SaleId");

                    b.HasIndex("StoreId");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.SaleDetalji", b =>
                {
                    b.Property<int>("SaleDetaljiId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena");

                    b.Property<bool>("FizickaKopija");

                    b.Property<int>("IgraId");

                    b.Property<int>("Popust");

                    b.Property<int>("SaleId");

                    b.Property<string>("StoreLink")
                        .IsUnicode(false);

                    b.HasKey("SaleDetaljiId");

                    b.HasIndex("IgraId");

                    b.HasIndex("SaleId");

                    b.ToTable("SaleDetalji");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .IsUnicode(false);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StoreId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Opis")
                        .HasColumnType("text");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Zanrovi", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Skracenica")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("ZanrId");

                    b.ToTable("Zanrovi");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Donacije", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Donacije")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Donacije__Korisn__02FC7413");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Igre", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Platforme", "Platform")
                        .WithMany("Igre")
                        .HasForeignKey("PlatformId")
                        .HasConstraintName("FK__Igre__PlatformId__778AC167");

                    b.HasOne("VGFeed.WebAPI.Database.Zanrovi", "Zanr")
                        .WithMany("Igre")
                        .HasForeignKey("ZanrId")
                        .HasConstraintName("FK__Igre__ZanrId__787EE5A0");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Korisnici", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Drzave", "Drzava")
                        .WithMany("Korisnici")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK__Korisnici__Drzav__5165187F");

                    b.HasOne("VGFeed.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("Korisnici")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__Korisnici__Uloga__52593CB8");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.KorisnikIgre", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Igre", "Igra")
                        .WithMany("KorisnikIgre")
                        .HasForeignKey("IgraId")
                        .HasConstraintName("FK__KorisnikI__IgraI__5629CD9C");

                    b.HasOne("VGFeed.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisnikIgre")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikI__Koris__5535A963");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.KorisnikSocials", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisnikSocials")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikS__Koris__59063A47");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Poruke", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Korisnici", "PosiljalacNavigation")
                        .WithMany("PorukePosiljalacNavigation")
                        .HasForeignKey("Posiljalac")
                        .HasConstraintName("FK__Poruke__Posiljal__05D8E0BE");

                    b.HasOne("VGFeed.WebAPI.Database.Korisnici", "PrimalacNavigation")
                        .WithMany("PorukePrimalacNavigation")
                        .HasForeignKey("Primalac")
                        .HasConstraintName("FK__Poruke__Primalac__06CD04F7");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.Sale", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Store", "Store")
                        .WithMany("Sale")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Sale__StoreId__46E78A0C");
                });

            modelBuilder.Entity("VGFeed.WebAPI.Database.SaleDetalji", b =>
                {
                    b.HasOne("VGFeed.WebAPI.Database.Igre", "Igra")
                        .WithMany("SaleDetalji")
                        .HasForeignKey("IgraId")
                        .HasConstraintName("FK__SaleDetal__IgraI__4AB81AF0");

                    b.HasOne("VGFeed.WebAPI.Database.Sale", "Sale")
                        .WithMany("SaleDetalji")
                        .HasForeignKey("SaleId")
                        .HasConstraintName("FK__SaleDetal__SaleI__49C3F6B7");
                });
#pragma warning restore 612, 618
        }
    }
}
